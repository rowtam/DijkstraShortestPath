----- Transcript file transcript.txt started Tue Apr 13 21:18:04 CDT 1999
----- Reading input from the file: testdata.txt. 

Processing Weighted Undirected Graph #1
Source Vertex for this graph is: 3
Shortest Path Output:
For vertex 1, distance is 4.0 (via path  3 4 1)
For vertex 2, distance is 5.0 (via path  3 2)
For vertex 3, distance is 0.0 (via path  3)
For vertex 4, distance is 1.0 (via path  3 4)
Vertex 5 is not reachable from vertex 3
Vertex 6 is not reachable from vertex 3
MST Output:
Graph is not fully connected, no spanning tree exists.
Here are the adjacency lists to demonstrate that this graph is being properly represented.
Adjacency Lists used in this Graph given by [VertexID, weight]:
Vertex 1:[2,10.0][3,20.0][4,3.0]
Vertex 2:[3,5.0][1,10.0]
Vertex 3:[2,5.0][1,20.0][4,1.0]
Vertex 4:[3,1.0][1,3.0]
Vertex 5:[6,8.0]
Vertex 6:[5,8.0]

Processing Weighted Undirected Graph #2
Source Vertex for this graph is: 1
Shortest Path Output:
For vertex 1, distance is 0.0 (via path  1)
For vertex 2, distance is 4.0 (via path  1 2)
For vertex 3, distance is 12.0 (via path  1 2 3)
For vertex 4, distance is 19.0 (via path  1 2 3 4)
For vertex 5, distance is 21.0 (via path  1 8 7 6 5)
For vertex 6, distance is 11.0 (via path  1 8 7 6)
For vertex 7, distance is 9.0 (via path  1 8 7)
For vertex 8, distance is 8.0 (via path  1 8)
For vertex 9, distance is 14.0 (via path  1 2 3 9)
MST Output:
The MST has cost 37.0 and contains the edges:
(2,1)
(3,6)
(4,3)
(5,4)
(6,7)
(7,8)
(8,1)
(9,3)
Here are the adjacency lists to demonstrate that this graph is being properly represented.
Adjacency Lists used in this Graph given by [VertexID, weight]:
Vertex 1:[8,8.0][2,4.0]
Vertex 2:[3,8.0][8,11.0][1,4.0]
Vertex 3:[6,4.0][4,7.0][9,2.0][2,8.0]
Vertex 4:[5,9.0][6,14.0][3,7.0]
Vertex 5:[6,10.0][4,9.0]
Vertex 6:[7,2.0][5,10.0][4,14.0][3,4.0]
Vertex 7:[6,2.0][9,6.0][8,1.0]
Vertex 8:[7,1.0][9,7.0][2,11.0][1,8.0]
Vertex 9:[3,2.0][7,6.0][8,7.0]

Processing Weighted Undirected Graph #3
Source Vertex for this graph is: 8
Shortest Path Output:
For vertex 1, distance is 3.31 (via path  8 4 1)
For vertex 2, distance is 3.28 (via path  8 4 2)
For vertex 3, distance is 15.35 (via path  8 4 3)
For vertex 4, distance is 1.44 (via path  8 4)
For vertex 5, distance is 27.7 (via path  8 4 3 5)
For vertex 6, distance is 12.34 (via path  8 4 6)
For vertex 7, distance is 8.49 (via path  8 7)
For vertex 8, distance is 0.0 (via path  8)
For vertex 9, distance is 26.95 (via path  8 7 9)
MST Output:
The MST has cost 44.56 and contains the edges:
(1,4)
(2,4)
(3,7)
(4,8)
(5,3)
(6,2)
(7,2)
(9,5)
Here are the adjacency lists to demonstrate that this graph is being properly represented.
Adjacency Lists used in this Graph given by [VertexID, weight]:
Vertex 1:[4,1.87][6,12.58][7,8.67][9,27.04]
Vertex 2:[7,6.21][6,9.46][4,1.84]
Vertex 3:[4,13.91][6,11.21][7,8.02][5,12.35][9,14.64]
Vertex 4:[7,7.4][8,1.44][6,10.9][3,13.91][2,1.84][1,1.87]
Vertex 5:[6,23.42][3,12.35][9,3.37]
Vertex 6:[4,10.9][3,11.21][2,9.46][1,12.58][5,23.42]
Vertex 7:[4,7.4][8,8.49][2,6.21][1,8.67][3,8.02][9,18.46]
Vertex 8:[7,8.49][4,1.44]
Vertex 9:[3,14.64][5,3.37][7,18.46][1,27.04]

Althought it isn't necessary, here is BinaryHeap test data
Demonstration of Binary Heap and Handle
Note that the Handle index always matches the array index
Thus the Handle index is being updated properly
Printing out Heap
Key: 1.0 index stored in Handle: 1 index of array: 1
Key: 2.0 index stored in Handle: 2 index of array: 2
Key: 7.0 index stored in Handle: 3 index of array: 3
Key: 4.0 index stored in Handle: 4 index of array: 4
Key: 3.0 index stored in Handle: 5 index of array: 5
Key: 14.0 index stored in Handle: 6 index of array: 6
Key: 9.0 index stored in Handle: 7 index of array: 7
Key: 16.0 index stored in Handle: 8 index of array: 8
Key: 8.0 index stored in Handle: 9 index of array: 9
Key: 10.0 index stored in Handle: 10 index of array: 10
Extracting Minimum
Printing out Heap
Key: 2.0 index stored in Handle: 1 index of array: 1
Key: 3.0 index stored in Handle: 2 index of array: 2
Key: 7.0 index stored in Handle: 3 index of array: 3
Key: 4.0 index stored in Handle: 4 index of array: 4
Key: 10.0 index stored in Handle: 5 index of array: 5
Key: 14.0 index stored in Handle: 6 index of array: 6
Key: 9.0 index stored in Handle: 7 index of array: 7
Key: 16.0 index stored in Handle: 8 index of array: 8
Key: 8.0 index stored in Handle: 9 index of array: 9
----- Transcript file transcript.txt closed Tue Apr 13 21:18:05 CDT 1999
